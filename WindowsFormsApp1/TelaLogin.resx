<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAmuSURBVHhe7d2/bxxVFMVx/ic6qlRQUaWCIqmIhEJFCmgISFCARCQQNJH4UYFISwglCelAJFWQ
        IEhQEQRlHGqTY/ba19d3zszaY8fa+V7po9g7b2bX9jvz3psdO089/czZbQA9AgIYBAQwCAhgEBDAICCA
        QUAAg4AABgEBDAICGAQEMAgIYBAQwCAggEFAAIOAAAYBAQwCAhgEBDAICGAQEMAgIIBBQACDgAAGAQEM
        AgIYBAQwCAhgEBDAICCAQUAAg4AABgEBDAICGAQEMAgIYBAQwCAggEFAAIOAAAYBAQwCAhgEBDAICGAQ
        EMAgIIBBQACDgAAGAQEMAgIYBAQwCAhgEBDAICCAQUAAg4AABgEBDAICGAQEMAgIYBAQwCAggEFAAIOA
        AAYBWcOZZ89tv3TxjX30WNdWatvj1r0GHA0BmejS6+9td/Vw69HOttz2hfOXdh4/6dJzvv/BZ/teC46G
        gEx05+7Pq254sLQtt7366bXVlidTfz74e/vCxcv7XhMOh4BMNDSCqLoRZGvr39XWk6kHf/1z4Dl/untv
        +/mzL+97bVgPAVmDOpvOzNlQB9TapLatrnz4+aorH600YsVzdqPX1U+u2bUShhGQJ+z6tzdX3fjwVQOg
        0N66/eNq6/+l9cmbb3+077kxjoA8Yb/e/2PVhY9WWnfUAGiU+vW3/cfX8+nx3A7DCMhEOkPrCpHO1nPR
        GmGd0jpDUyj9O1Q6Zg2ApnJ1fXLz+x+Ydk1AQCaaYyp0lNKUKXdoBcVdCPj6xnf72uvjeiUu1i4YRkAm
        qnP6J1FffHX9QKd3wdW6QyOVrqopMLUIyDgCMpE6mUKis/BxmXJpuHszUFMq7b9uEZBxBOQU0dWnLiRT
        F9tvvfOxXZ8oRApFFAEZR0BOmW4kiG1Di+38XoxC05WOG22iCMg4AnKKDHXu3Ebrji+vfbPasldan3Tr
        jCgCcjgEZA2awuSbEDXNqe+kq6N2pTN9tFEnX+cSbz5+0PPWaVeuOtUiIIdDQNbQVe5k6rSuYs3g7uvq
        Ko7fqVfXFBo9j15XLgJyOARkDd36oN6oOLRI1tohRpuxIOXKHbuj0SivSyKEBGQeBGQN6ozqgEGXfsfa
        hDoV0+ddu0rHy/t18ppE++ixGhC1ifZRBGQcAdkA+a7gGhCNaFo75fZRBGQcAZlJ9yuwc5gygigUUREQ
        Tf0UgG7/KAIyjoDMoLvsOlfpalf3nFkXECeKgIwjIDOYcovIUaq+GVhNDYiOkS8vE5BxBGQGmuMfd0ji
        xsNuyqSOHtUFRPt078/UK3A4iICcAurUUwOmX4zKHVujQn7zsgZENzbm7Sq9d+JGJOwhIKfEuusYBaV7
        Nz4Con/rbyvqilY3wmAYATkFNAVSh5+jtF6RXBqddCm4e254BGRGeuNQnVNndtHHec1Qt4e5wtGVRqZu
        3YJpCMiMut861GOx/TiDUEu3lnTv9GM9BGRG3a+/6rHY7n6Zaa7Sc3B1aj4EZEaayuiSa9C8P09vdOUo
        b58b64z5ERDAICCAQUAAg4AABgEBDAICGAQEMBYZkDPPndv5rwJ2bvu4c2+HPtadr6flLlfdQp//Enzn
        wivceHjcFheQF89fGr3l4yQ6np5Dnbz+vniYUif1jrlOKBFKfdy12VSLCoh+uA8f+v99VrdqdPvOLUJ6
        6/beH5QLCs+UOqnOqnfpo7rtm2xRAck/aJXudNWIog6ps7E669AZfU5XHk/lovSx267S6+vU/Y6DppxR
        uvO4a7PJFhUQ/YCj9MtEXRtRB421Sf57UkGdM7aLwhXTEH2u0SG2aV0TZ3r9q7VPHsV+uf/7btsI5/Ub
        ezc9Th3RdNz83DH90kkhjl/30dehv+eb99Pnr7727u52vb4ove44Vvd92USLDYh+8F0bySNN104dJGrn
        t/QedyQ3dVMYNVKNTe9iVMhrJIWlPn819EerFbioekJwf+habfPX2BUB2UD5zKwamk7p7Jsrb1MnzqVj
        aGqWK34RKkptcmcdKh1fo0yubgqWqaNOqdyhx/aZ8lqHvnebZlEBqZ1bpTNpXezWdnlbHT30WK7cEXXc
        2sHzlKUbHepz6/XFFaQQI01eH6h05tdzSg6oKjp0Pb72yZe21S6+H3kk3dp6tNtmSRYVEKkLdZU6bQ1J
        ruiQtXNFp8vVHSvo8VzdWbh7fbUidHlEVAeuHT2Xpnh6PI922mfotUoOmT7u2my6xQVEaudR1bWGRoeo
        CEjukLnD1LO11hr1/xGUGrDotFmdrnUV++U1TR2N8tcYZ/8aUIUx71Pl44+13VSLDIios6rj5IogSO70
        OmPX6Uxuq205UFGajuUzdB0d4vEsd0q9Bu1TqZ1Ckqu+aah2URHmKQEN9eutx1+KxQZEaoeJzid5IavH
        h0aPoCB0i998zDw6dMeonbKbgoWxzp4DHq9BQc+V21d1lHVTsU226IBIrtyZ9XGUOn4+s+fRo1JHzSNT
        DsLYlKVePctrisp19qGzf/6aVHmfKod96nsxm2gRAVHH6Dp1PUvmM3Y+Q+f3JTQKRJuhs2o+e0dA6vy/
        Gx1yB451w5AapjyC1PcwImg1IPV7kgPZfQ1LtIiAxA873i3WH3LOl1tV9YpOneNH5U6kDqZj7lx6vXh5
        hz7OFZd96/H0/Gqry7jRudfplEPHq19XPvvXfTSiaR/R3cyqaJtfS7TT981N+zbRogLiqvvB16pXivIo
        05VClwNVLwpExZk8VzcFq4a+rvw8ecRz+0RFu6GraVNe1yZZREDU+burTCp1mDiDV3Wf3NlF+w11+u64
        eh21tL/a1bP7lKtG2kdv9OVSx87Tr9qhNUrmCw658glAX2v3PWME2WDqUDpbB3dlRtvGFtVhneOq4+W2
        XZt1xbFqgJ36OoZe85Q2m2xRAVlHvplPZ/kldg4QkF06oyoEGg1iwRpV76fCchCQlXoJNEpria49loGA
        rHQBqVetsDwEZEWLUI0WorDo864dloWAAAYBAQwCAhgEBDAICGAQEMAgIIBBQACDgAAGAQEMAgIYBAQw
        CAhgEBDAICCAQUAAg4AABgEBDAICGAQEMAgIYBAQwCAggEFAAIOAAAYBAQwCAhgEBDAICGAQEMAgIIBB
        QACDgAAGAQEMAgIYBAQwCAhgEBDAICCAQUAAg4AABgEBDAICGAQEMAgIYBAQwCAggEFAAIOAAAYBAQwC
        AhgEBDAICGAQEMAgIIBBQACDgAAGAQEMAgIYBAQwCAhgEBDAICCAQUAAg4AABgEBDAICGAQEMAgIYBAQ
        wCAggEFAAIOAAAYBAQwCAhgEBBh0dvs/LNMS3FDvPcMAAAAASUVORK5CYII=
</value>
  </data>
</root>